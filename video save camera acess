import cv2
from mtcnn import MTCNN

# Open video file or webcam
video_path = 0  # Use 0 for webcam, or "video.mp4" for a video file
cap = cv2.VideoCapture(video_path)

# Check if the video source opened successfully
if not cap.isOpened():
    print("Error: Could not open video.")
    exit()

# Get video properties
frame_width = int(cap.get(3))  # Width of the frame
frame_height = int(cap.get(4))  # Height of the frame
fps = int(cap.get(cv2.CAP_PROP_FPS))  # Frames per second

# Define codec and create VideoWriter object
output_path = "output_video.avi"  # Output file name
fourcc = cv2.VideoWriter_fourcc(*'XVID')  # Codec for AVI format
out = cv2.VideoWriter(output_path, fourcc, fps, (frame_width, frame_height))

# Initialize MTCNN detector
detector = MTCNN()

while True:
    # Read a frame from the video
    ret, frame = cap.read()
    
    if not ret:
        print("End of video or error in reading frame.")
        break
    
    # Convert frame to RGB for MTCNN
    frame_rgb = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
    
    # Detect faces
    faces = detector.detect_faces(frame_rgb)
    
    # Draw bounding boxes around detected faces
    for face in faces:
        x, y, w, h = face['box']
        cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 255, 0), 2)
    
    # Write the processed frame to the output video
    out.write(frame)

    # Show the output in a window
    cv2.imshow("Face Detection", frame)
    
    # Press 'q' to exit
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Release resources
cap.release()
out.release()  # Save the output video
cv2.destroyAllWindows()

print(f"Output video saved as: {output_path}")
